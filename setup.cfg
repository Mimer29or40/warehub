[metadata]
name = warehub
url = https://github.com/Mimer29or40/warehub/
download_url = https://pypi.org/project/warehub/
project_urls =
    Source = https://github.com/Mimer29or40/warehub/
    Documentation = https://github.com/Mimer29or40/warehub/wiki
    Issue Tracker = https://github.com/Mimer29or40/warehub/issues
author = Ryan Smith
author_email = Ryan.Smith.Dev.Things@gmail.com
maintainer = Ryan Smith
maintainer_email = Ryan.Smith.Dev.Things@gmail.com
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Environment :: Other Environment
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Database
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: HTTP Servers
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Version Control :: Git
    Topic :: Utilities
license = MIT
license_file = LICENSE
description = A static pypi-like Python repository generator for projects that cannot be hosted on pypi
long_description = file:README.md
long_description_content_type = text/markdown
keywords =
    pypi
    warehouse
    twine
    warehub
    github
    actions
platforms = any
;provides =
;requires =
;obsoletes =

[options]
;zip_safe =
;install_requires = # Defined in setup.py until PyCharm can detect requirements here
python_requires = >=3.8
;scripts =
;eager_resources =
;dependency_links =
include_package_data = True
packages = find:
package_dir = =src
;namespace_packages =
;py_modules =

;[options.extras_require]
;tests = # Defined in setup.py until PyCharm can detect requirements here

[options.entry_points]
warehub.commands =
    init = warehub.command:init
    add = warehub.command:add
    generate = warehub.command:generate
    yank = warehub.command:yank
console_scripts =
    warehub = warehub.__main__:main

[options.packages.find]
where = src

[options.package_data]
warehub = templates/*

;[options.exclude_package_data]

;[options.data_files]


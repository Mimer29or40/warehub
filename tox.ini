[tox]
minversion = 3.3
envlist = lint,types,py{38,39,310}
;envlist = format
isolated_build = True

[testenv]
setenv =
;    PIP_EXTRA_INDEX_URL = https://mypypiserver.org
    PYTHONHASHSEED = 100
deps =
;    pretend
;    pytest
;    pytest-cov
;    pytest-socket
passenv =
    PYTHONPATH
commands =
;    pytest --ignore-glob '*integration*.py' {posargs:--cov-report term-missing --cov-report html}

[testenv:docs]
description = Builds documentation
changedir = docs
deps =
    -r docs/requirements.txt
commands =
    sphinx-build -M html source build

;[testenv:docs]
;deps =
;    -rdocs/requirements.txt
;commands =
;    sphinx-build -W --keep-going -b html -d {envtmpdir}/doctrees docs docs/_build/html
;    sphinx-build -W --keep-going -b doctest -d {envtmpdir}/doctrees docs docs/_build/html
;    doc8 docs README.rst --ignore-path docs/_build/html
;    sphinx-build -W --keep-going -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/linkcheck
;    python -m twine check --strict {distdir}/*

[testenv:format]
skip_install = True
deps =
    isort
    black
commands =
    isort src/ test/
    black src/ test/

[testenv:lint]
skip_install = True
deps =
    {[testenv:format]deps}
    flake8
    flake8-docstrings
commands =
    isort --check-only --diff src/ test/
    black --check --diff src/ test/
    flake8 src/ test/

[testenv:types]
deps =
    mypy
    lxml
    # required for more thorough type declarations
    keyring >= 22.3
    # consider replacing with `mypy --install-types` when
    # https://github.com/python/mypy/issues/10600 is resolved
    types-requests
commands =
    mypy --html-report mypy --txt-report mypy {posargs:src}
    python -c 'with open("mypy/index.txt") as f: print(f.read())'

;[testenv:changelog]
;basepython = python3
;deps =
;    towncrier
;commands =
;    towncrier {posargs}

;[testenv:release]
;# specify Python 3 to use platform's default Python 3
;basepython = python3
;deps =
;    check-manifest >= 0.42
;    build
;passenv =
;    TWINE_PASSWORD
;    TWINE_REPOSITORY
;setenv =
;    TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
;commands =
;    check-manifest --ignore 'tox.ini,test/**,.idea/**'
;    python setup.py check -m -s
;    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
;    python -m build
;    python -m twine upload dist/*

[testenv:dev]
envdir = {posargs:venv}
recreate = True
deps =
    {[testenv]deps}
;    {[testenv:integration]deps}
    {[testenv:format]deps}
    {[testenv:lint]deps}
    {[testenv:types]deps}
download = True
usedevelop = True
commands =
    python -c 'import sys; print(sys.executable)'
    python --version

;[testenv:devpi]
;deps =
;    devpi-server
;    devpi

;[testenv:pypiserver]
;deps =
;    pypiserver
